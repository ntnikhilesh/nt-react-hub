{"ast":null,"code":"var _jsxFileName = \"/Users/nikhil/Desktop/nikhil-workspace/cc-hub/React with Redux/nt-react-hub/src/components/Posts.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/postActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Posts extends Component {\n  componentWillMount() {\n    this.props.fetchPosts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newPost) {\n      this.props.posts.unshift(nextProps.newPost);\n    }\n  }\n\n  render() {\n    const postItems = this.props.posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), postItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nPosts.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  newPost: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  newPost: state.posts.item\n});\n\nexport default connect(mapStateToProps, {\n  fetchPosts\n})(Posts);","map":{"version":3,"sources":["/Users/nikhil/Desktop/nikhil-workspace/cc-hub/React with Redux/nt-react-hub/src/components/Posts.js"],"names":["React","Component","PropTypes","connect","fetchPosts","Posts","componentWillMount","props","componentWillReceiveProps","nextProps","newPost","posts","unshift","render","postItems","map","post","title","body","id","propTypes","func","isRequired","array","object","mapStateToProps","state","items","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,wBAA3B;;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAC5BK,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,KAAL,CAAWH,UAAX;AACD;;AAEDI,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIA,SAAS,CAACC,OAAd,EAAuB;AACrB,WAAKH,KAAL,CAAWI,KAAX,CAAiBC,OAAjB,CAAyBH,SAAS,CAACC,OAAnC;AACD;AACF;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAG,KAAKP,KAAL,CAAWI,KAAX,CAAiBI,GAAjB,CAAqBC,IAAI,iBACzC;AAAA,8BACE;AAAA,kBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAUF,IAAI,CAACG,EAAf;AAAA;AAAA;AAAA;AAAA,YADgB,CAAlB;AAMA,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGL,SAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAxB2B;;AA2B9BT,KAAK,CAACe,SAAN,GAAkB;AAChBhB,EAAAA,UAAU,EAAEF,SAAS,CAACmB,IAAV,CAAeC,UADX;AAEhBX,EAAAA,KAAK,EAAET,SAAS,CAACqB,KAAV,CAAgBD,UAFP;AAGhBZ,EAAAA,OAAO,EAAER,SAAS,CAACsB;AAHH,CAAlB;;AAMA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCf,EAAAA,KAAK,EAAEe,KAAK,CAACf,KAAN,CAAYgB,KADa;AAEhCjB,EAAAA,OAAO,EAAEgB,KAAK,CAACf,KAAN,CAAYiB;AAFW,CAAL,CAA7B;;AAKA,eAAezB,OAAO,CAACsB,eAAD,EAAkB;AAAErB,EAAAA;AAAF,CAAlB,CAAP,CAAyCC,KAAzC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/postActions';\n\nclass Posts extends Component {\n  componentWillMount() {\n    this.props.fetchPosts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newPost) {\n      this.props.posts.unshift(nextProps.newPost);\n    }\n  }\n\n  render() {\n    const postItems = this.props.posts.map(post => (\n      <div key={post.id}>\n        <h3>{post.title}</h3>\n        <p>{post.body}</p>\n      </div>\n    ));\n    return (\n      <div>\n        <h1>Posts</h1>\n        {postItems}\n      </div>\n    );\n  }\n}\n\nPosts.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  newPost: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  newPost: state.posts.item\n});\n\nexport default connect(mapStateToProps, { fetchPosts })(Posts);\n"]},"metadata":{},"sourceType":"module"}